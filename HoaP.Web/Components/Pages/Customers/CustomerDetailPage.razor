@page "/zakaznik/{Id:int}"
@inject CustomerService CustomerService
@inject ReservationService ReservationService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="container mt-4">
    @if (customer == null)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only"></span>
            </div>
            <p class="mt-3">Načítám podrobnosti o zákazníkovi...</p>
        </div>
    }
    else
    {
        <!-- Customer Details Card -->
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3>@customer.FirstName @customer.LastName <small class="text-muted">#@customer.Id</small></h3>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary" @onclick="() => NavigateToUpdateCustomer(Id)">Upravit zákazníka</button>
                        <button class="btn btn-success" @onclick="NavigateToAddReservation">+ Přidat rezervaci</button>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <h5>Osobní informace</h5>
                        <ul class="list-unstyled">
                            <li><strong>Jméno:</strong> @customer.FirstName @customer.LastName</li>
                            <li><strong>Číslo dokumentu:</strong> @customer.DocumentNumber</li>
                            <li><strong>Místo narození:</strong> @customer.PlaceOfBirth</li>
							<li><strong>Datum narození:</strong> @customer.DateOfBirth.ToShortDateString()</li>
							<li><strong>Datum vydání:</strong> @customer.DateOfIssue.ToShortDateString()</li>
							<li><strong>Datum expirace:</strong> @customer.DateOfExpiry.ToShortDateString()</li>
                            <li><strong>Rodné číslo:</strong> @customer.PersonalIdentificationNumber</li>
                        </ul>
                    </div>

                    <div class="col-md-6">
                        <h5>Kontaktní informace</h5>
                        <ul class="list-unstyled">
                            <li><strong>Národnost:</strong> @customer.Nationality</li>
                            <li><strong>Telefon:</strong> @customer.Phone</li>
                            <li><strong>Email:</strong> @customer.Email</li>
                            <li><strong>Adresa:</strong> @customer.Address</li>
                            <li><strong>Město:</strong> @customer.City</li>
                            <li><strong>PSČ:</strong> @customer.PostalCode</li>
                            <li><strong>Země:</strong> @customer.Country</li>
                        </ul>
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-md-6">
                        <p><strong>Vytvořeno:</strong> @customer.CreatedAt</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Aktualizováno:</strong> @customer.UpdatedAt</p>
                    </div>
                </div>

                <div class="d-flex gap-3 mt-4">
                    <button class="btn btn-danger flex-grow-1" @onclick="OpenDeleteConfirmation">Smazat zákazníka</button>
                    <button class="btn btn-outline-secondary flex-grow-1" @onclick="NavigateToCustomers">Zpět na seznam</button>
                </div>
            </div>
        </div>

        <!-- Reservations Table -->
        <div class="card border-0 shadow-sm mt-5">
            <div class="card-body">
                <h4>Rezervace</h4>
                <div class="table-responsive-lg">
                    <QuickGrid Items="filteredReservations.AsQueryable()" Pagination="paginationState" Class="w-100">
                        <PropertyColumn Title="Zákazník" Property="@(x => x.CustomerName)" Sortable="true" />
                        <PropertyColumn Title="Check-In" Property="@(x => x.CheckIn.ToShortDateString())" Sortable="true" />
                        <PropertyColumn Title="Check-Out" Property="@(x => x.CheckOut.ToShortDateString())" Sortable="true" />
                        <PropertyColumn Title="Pokoj" Property="@(x => x.RoomNumber)" Sortable="true" />
						<PropertyColumn Title="Cena" Property="@(x => x.TotalPrice.ToString("C0"))" Sortable="true" />
                        <PropertyColumn Title="Status" Property="@(x => x.ReservationStatusName)" Sortable="true" />
                        <TemplateColumn Title="Akce">
                            <div class="d-inline-flex gap-2">
                                <button class="btn text-primary" @onclick="() => NavigateToReservationDetail(context.Id)">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </TemplateColumn>
                    </QuickGrid>
                    <Paginator State="paginationState" />
                </div>
            </div>
		</div>
    }
</div>

<DeleteModal IsVisible="@isDeleteModalVisible" OnClose="HandleModalClose" ActionType="DeleteCustomer" Title="Smazání zákazníka" />

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private DetailCustomerViewModel customer { get; set; } = new DetailCustomerViewModel();
    private List<ReservationViewModel> reservations = new List<ReservationViewModel>();
    private List<ReservationViewModel> filteredReservations = new List<ReservationViewModel>();
    private string? searchTerm;
    private PaginationState paginationState = new PaginationState() { ItemsPerPage = 10 };

    private bool isDeleteModalVisible = false;

    private void OpenDeleteConfirmation()
    {
        isDeleteModalVisible = true;
    }

    private async void HandleModalClose(bool result)
    {
        if (result)
        {
            await DeleteCustomer();
        }
        isDeleteModalVisible = false;
    }

    protected override async Task OnInitializedAsync()
    {
        customer = await CustomerService.GetCustomerById(Id);
        reservations = await ReservationService.GetReservationsByCustomerIdAsync(Id);
        filteredReservations = reservations;
    }

    private async Task DeleteCustomer()
    {
        await CustomerService.DeleteCustomer(Id);
        NavigateToCustomers();
    }

    private void NavigateToCustomers()
    {
        NavigationManager.NavigateTo("/zakaznici");
    }

    private void NavigateToReservationDetail(int id)
    {
        NavigationManager.NavigateTo($"/rezervace/{id}");
    }

    private void NavigateToAddReservation()
    {
        NavigationManager.NavigateTo($"/vytvorit-rezervaci/zakaznik/{Id}");
	}


    private void NavigateToUpdateCustomer(int id)
    {
        NavigationManager.NavigateTo($"/spravovat-zakaznika/{id}");
    }
}