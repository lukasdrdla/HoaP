@page "/account/test"
@inject AccountService AccountService
@inject IServiceScopeFactory ServiceScopeFactory
@if (user != null)
{
    <div class="search-container">
        <input type="text" placeholder="Search here" class="search-input" />
    </div>
    <div class="topbar-icons">
        <div class="notification-icon">
            <i class="bi bi-bell"></i>
            <span class="notification-dot"></span>
        </div>
        <div class="menu-icon">
            <i class="bi bi-grid"></i>
        </div>
        <div class="user-profile">
            <img src="@user.ProfilePicture" alt="User Profile" class="profile-pic" />
            <div class="user-info">
                <span>@user.Email</span>
                <small>@user.JobTitle</small>
            </div>
        </div>
    </div>
 
}
else
{
	<h1></h1>
}

@code {

	private AppUser user = new AppUser();


	protected override async Task OnInitializedAsync()
	{
		using (var scope = ServiceScopeFactory.CreateScope())
		{
			var accountService = scope.ServiceProvider.GetRequiredService<AccountService>();
			user = await accountService.GetCurrentUserAsync();
		}
		
	}


}
